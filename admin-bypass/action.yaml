name: "Admin bypass action"
author: "Jaspar Stach <jaspar.stach@greenbone.net>"
description: "An action that allows or disallows admin bypassing branch protection rules on the target branch."

inputs:
  github-token:
    description: "GitHub Token for authentication"
    default: ${{ github.token }}
  allow:
    description: "Allow or not? (Options: true, false)? Default: false"
    default: "false"
  repository:
    description: "What repository branch should be able to be bypassed by admins? Defaults to the executing repository."
    default: ${{ github.repository }}
  branch:
    description: "Target branch for the bypass. Default: main"
    default: "main"

branding:
  icon: "package"
  color: "green"

runs:
  using: "composite"
  steps:
    - name: Set up Python and pontos
      id: virtualenv
      uses: greenbone/actions/setup-pontos@v3
    - name: allow/not allow bypass?
      run: |
        if [[ "${{inputs.allow}}" == "true" ]];
        then
          echo "ALLOW_OPT=--allow" >> $GITHUB_ENV
        elif [[ "${{inputs.allow}}" == "false" ]];
        then
          echo "ALLOW_OPT=--no-allow" >> $GITHUB_ENV
        else
          echo "ALLOW_OPT=--no-allow" >> $GITHUB_ENV
        fi
      shell: bash
      # in case of blubber input let the branch be unlocked!
    - name: Prepare release and store the version
      run: |
        source ${{ steps.virtualenv.outputs.activate }}
        pontos-github-script pontos.github.scripts.enforce-admins ${{ inputs.repository }} ${{ inputs.branch }} ${{ env.ALLOW_OPT }}
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
