name: "Container signing"
description: "Cosign based action to create container signatures. Depending on the input public/private key or keyless signatures are created."

inputs:
  image-digest:
    description: "Set the digest from the docker build and push action e.g the output of steps.build-and-push.outputs.digest."
    required: false
  image-tags:
    description: "Set the tags from the docker meta action e.g the output of steps.meta.outputs.tags."
    required: true
  cosign-key-password:
    description: "Set the cosign key password, if not set a keyless signature will be created."
    required: false
  cosign-key:
    description: "Set the cosign key, if not set a keyless signature will be created."
    required: false

branding:
  icon: "package"
  color: "green"

runs:
  using: "composite"
  steps:
    - uses: sigstore/cosign-installer@v3
    - name: Get registry url from image tags
      if: ${{ inputs.image-digest }}
      id: registry-url
      shell: bash
      run: |
        URL=$(echo "${{ inputs.image-tags }}" \
          | head -1 \
          | cut -d ':' -f 1
        )
        echo "url=$URL" >> $GITHUB_OUTPUT 
    - name: Sign container image (public/private keypair)
      if: ${{ inputs.cosign-key-password && inputs.cosign-key }}
      shell: bash
      env:
        COSIGN_PASSWORD: ${{ inputs.cosign-key-password }}
        COSIGN_KEY: ${{ inputs.cosign-key }}
      run: |
        if [ "${{ inputs.image-digest }}" ]; then
            cosign sign -y -r --key env://COSIGN_KEY \
              ${{steps.registry-url.outputs.url }}@${{ inputs.image-digest }}
        else
          echo "${{ inputs.image-tags }}" | \
            xargs -I {} cosign sign -y -r --key env://COSIGN_KEY {}
        fi
    - name: Sign the published Container Image (Keyless)
      if: ${{ !inputs.cosign-key-password || !inputs.cosign-key }}
      shell: bash
      run: |
       if [ "${{ inputs.image-digest }}" ]; then
           cosign sign -y -r \
             ${{steps.registry-url.outputs.url }}@${{ inputs.image-digest }}
       else
         echo "${{ inputs.image-tags }}" | \
           xargs -I {} cosign sign -y -r {}
       fi
