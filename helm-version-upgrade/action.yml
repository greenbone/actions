name: "Helm chart version upgrade"
description: "GitHub Action to upgrade a Helm chart version"
inputs:
  chart-path:
    description: "Full path to helm chart folder"
    required: true
  chart-version:
    description: "New helm chart version"
  app-version:
    description: "New helm chart appVersion, optional default chart-version"
    required: false
  image-tag:
    description: "New helm chart docker image tag, optional default chart-version"
    required: false
  no-tag:
    description: "Do not upgrade an image tag in values.yaml"
    required: false
  dependency-name:
    description: "Helm chart dependency to upgrade"
    required: false
  dependency-version:
    description: "New helm chart dependency version"
    required: false
  git-user:
    description: "Git user name for commit, set only if autocommit is desired"
    required: false
  git-user-email:
    description: "Git user email for commit, set only if autocommit is desired"
    required: false
  token:
    description: "Github token for commit, set only if autocommit is desired"
    default: ${{ github.token }}
  python-version:
    description: "Python version to use for running the action"
    required: false
    default: "3.11"
  poetry-version:
    description: "Use a specific poetry version. By default the latest release is used."
  cache-poetry-installation:
    description: "Cache poetry and its dependencies. Default is 'true'. Set to an other string then 'true' to disable the cache."
    default: "true"

runs:
  using: "composite"
  steps:
    - name: Set up Python and Poetry
      uses: greenbone/actions/poetry@v3
      with:
        python-version: ${{ inputs.python-version }}
        working-directory: ${{ github.action_path }}
        without-dev: "true"
        poetry-version: ${{ inputs.poetry-version }}
        cache-dependency-path: ${{ github.action_path }}/poetry.lock
        cache-poetry-installation: ${{ inputs.cache-poetry-installation }}
    - name: Run helm-chart-version-upgrade
      working-directory: ${{ github.action_path }}
      shell: bash
      run: |
        cmd="--chart-path ${{ inputs.chart-path }}"
        if [ "${{ inputs.chart-version }}" ]; then
          cmd+=" --chart-version ${{ inputs.chart-version }}"
        fi
        if [ "${{ inputs.app-version }}" ]; then
          cmd+=" --app-version ${{ inputs.app-version }}"
        fi
        if [ "${{ inputs.image-tag }}" ]; then
          cmd+=" --image-tag ${{ inputs.image-tag }}"
        fi
        if [ "${{ inputs.no-tag }}" == 'true' ]; then
          cmd+=" --no-tag"
        fi
        if [ "${{ inputs.dependency-name }}" ]; then
          cmd+=" --dependency-name ${{ inputs.dependency-name }}"
        fi
        if [ "${{ inputs.dependency-version }}" ]; then
          cmd+=" --dependency-version ${{ inputs.dependency-version }}"
        fi
        poetry run helm-chart-version-upgrade $cmd
    - name: Push
      if: inputs.git-user && inputs.git-user-email && inputs.token
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      shell: bash
      run: |
        git config --global user.name "${{ inputs.git-user }}"
        git config --global user.email "${{ inputs.git-user-email }}"
        set +e
        git diff --exit-code
        if ! [ "$?" -eq 0 ]; then
          set -e
          git add -u
          git commit -m "Change: Upgrade helm chart to version ${{ inputs.chart-version }}"
          git push
        fi
