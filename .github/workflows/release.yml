name: Release
# We will push the action to the correct branch
# and can use it afterwards with the `@v2` tag

on:
  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        description: What kind of release do you want to do?
        options:
          - patch
          - minor
          - major
      release-version:
        type: string
        description: Set an explicit version (without leading v), that will overwrite release-type. Fails if version is not semver compliant.

jobs:
  release:
    name: Actions
    runs-on: 'ubuntu-latest'
    environment:
      name: release
      url: https://github.com/greenbone/actions/releases
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          token: ${{ secrets.GREENBONE_BOT_TOKEN }}
          fetch-depth: 0 # for conventional commits
          ref: main
      - name: Set git name, mail and origin
        run: |
          git config --global user.name "${{ secrets.GREENBONE_BOT }}"
          git config --global user.email "${{ secrets.GREENBONE_BOT_MAIL }}"
      - name: Release with release action
        id: release
        uses: greenbone/actions/release@main
        with:
          github-user: ${{ secrets.GREENBONE_BOT }}
          github-user-mail: ${{ secrets.GREENBONE_BOT_MAIL }}
          github-user-token: ${{ secrets.GREENBONE_BOT_TOKEN }}
          gpg-key: ${{ secrets.GPG_KEY }}
          gpg-fingerprint: ${{ secrets.GPG_FINGERPRINT }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
          release-type: ${{ inputs.release-type }}
          release-version: ${{ inputs.release-version }}
          versioning-scheme: "semver"
          update-project: false
          ref: main
      - name:
        id: version
        run: |
          # get major minor patch versions
          IFS='.' read -r major minor patch << EOF
          ${{ steps.release.outputs.git-release-tag }}
          EOF

          echo "major=$major" >> $GITHUB_OUTPUT
      - name: Re-tag ${{ steps.version.outputs.major }}
        run: |
          git tag -f ${{ steps.version.outputs.major }} ${{ steps.release.outputs.git-release-tag }}^{}
          git push --force origin ${{ steps.version.outputs.major }}
