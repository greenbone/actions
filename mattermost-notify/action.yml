name: "Send mattermost message"
description: "Send a mattermost message"

inputs:
  MATTERMOST_WEBHOOK_URL:
    description: "Mattermost webhook url"
    deprecationMessage: "Deprecated. Use url instead."
  MATTERMOST_CHANNEL:
    description: "Mattermost channel"
    deprecationMessage: "Deprecated. Use channel instead."
  MATTERMOST_HIGHLIGHT:
    description: "highlight users in channel. Deprecated."
    deprecationMessage: "Deprecated. Use highlight instead."
  url:
    description: "Mattermost webhook url"
  channel:
    description: "Mattermost channel"
  highlight:
    description: "highlight users in channel"
  branch:
    description: Git branch
  commit:
    description: Git commit
  commit-message:
    description: Git commit message to use
  repository:
    description: GitHub repository (org/repo). Default is github.repository
    default: ${{ github.repository }}
  workflow:
    description: GitHub workflow ID
  workflow-name:
    description: GitHub workflow name

branding:
  icon: "package"
  color: "green"

runs:
  using: "composite"
  steps:
    - name: Install
      uses: greenbone/actions/pipx@v3
      id: pipx
      with:
        python-version: "3.10"
        install: mattermost-notify
    - name: Create the Mattermost Message
      shell: bash
      run: |
        ARGS=""
        if [ -n "${{ inputs.commit }}" ]; then
          ARGS="${ARGS} --commit ${{ inputs.commit }}"
        fi
        if [ -n "${{ inputs.commit-message }}" ]; then
          ARGS="${ARGS} --commit-message ${{ inputs.commit-message }}"
        fi
        if [ -n "${{ inputs.branch }}" ]; then
          ARGS="${ARGS} --branch ${{ inputs.branch }}"
        fi
        if [ -n "${{ inputs.repository }}" ]; then
          ARGS="${ARGS} --repository ${{ inputs.repository }}"
        fi
        if [ -n "${{ inputs.workflow }}" ]; then
          ARGS="${ARGS} --workflow ${{ inputs.workflow }}"
        fi
        if [ -n "${{ inputs.workflow-name }}" ]; then
          ARGS="${ARGS} --workflow_name ${{ inputs.workflow-name }}"
        fi

        ARGS="${ARGS} ${{ inputs.MATTERMOST_WEBHOOK_URL }}${{ inputs.url }} ${{ inputs.MATTERMOST_CHANNEL }}${{ inputs.channel }}"

        if [ -n "${{ inputs.MATTERMOST_HIGHLIGHT }}" -o -n "${{ inputs.highlight }}" ] ; then
          ARGS="${ARGS} --highlight ${{ inputs.MATTERMOST_HIGHLIGHT }} ${{ inputs.highlight }}"
        fi

        mnotify-git ${ARGS}
