name: "Send mattermost message"
description: "Send a mattermost message"

inputs:
  MATTERMOST_WEBHOOK_URL:
    description: "Mattermost webhook url"
    deprecationMessage: "Deprecated. Use url instead."
  MATTERMOST_CHANNEL:
    description: "Mattermost channel"
    deprecationMessage: "Deprecated. Use channel instead."
  MATTERMOST_HIGHLIGHT:
    description: "highlight users in channel. Deprecated."
    deprecationMessage: "Deprecated. Use highlight instead."
  url:
    description: "Mattermost webhook url"
  channel:
    description: "Mattermost channel"
  highlight:
    description: "highlight users in channel"
  branch:
    description: Git branch. Default is 'github.ref_name'.
    default: ${{ github.ref_name }}
  commit:
    description: Git commit. Default is 'github.sha'.
    default: ${{ github.sha }}
  commit-message:
    description: Git commit message to use
  free:
    description: Free textmessage
  repository:
    description: GitHub repository (org/repo). Default is 'github.repository'
    default: ${{ github.repository }}
  status:
    description: Specifies the notification status. Options success or failure. Default is automatic detected by 'GITHUB_EVENT_PATH' json.
  skip-installation-on:
    description: Skip mn-notify installation on selected runner. Default is self-hosted-generic.
    default: "self-hosted-generic"
  workflow:
    description: GitHub workflow ID. Default is 'github.run_id'.
    default: ${{ github.run_id }}
  workflow-name:
    description: GitHub workflow name. Default is 'github.workflow'
    default: ${{ github.workflow }}

branding:
  icon: "package"
  color: "green"

runs:
  using: "composite"
  steps:
    - name: Checkout
      # we need a checkout to determine the commit-message per git
      # if commit is set but commit-message is not
      if: inputs.commit && !inputs.commit-message
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.commit }}

    - name: Install
      if: ${{ !startsWith(runner.name, inputs.skip-installation-on) }}
      uses: greenbone/actions/pipx@v3
      id: pipx
      with:
        python-version: "3.10"
        install: mattermost-notify

    - name: Set Channel and Webhook
      shell: bash
      run: |
        echo "POS_ARGS=${{ inputs.MATTERMOST_WEBHOOK_URL }}${{ inputs.url }} ${{ inputs.MATTERMOST_CHANNEL }}${{ inputs.channel }}" >> $GITHUB_ENV
      
    - name: Inputs for Github success notifications
      shell: bash
      run: |
        ARGS=()

        if [ -n "${{ inputs.commit }}" ]; then
          ARGS+=(--commit "${{ inputs.commit }}")
        fi

        if [ -n "${{ inputs.commit-message }}" ]; then
          ARGS+=(--commit-message "${{ inputs.commit-message }}")
        fi

        if [ -n "${{ inputs.branch }}" ]; then
          ARGS+=(--branch "${{ inputs.branch }}")
        fi

        if [ -n "${{ inputs.repository }}" ]; then
          ARGS+=(--repository "${{ inputs.repository }}")
        fi

        if [ -n "${{ inputs.status }}" ]; then
          ARGS+=(--status "${{ inputs.status }}")
        fi

        if [ -n "${{ inputs.workflow }}" ]; then
          ARGS+=(--workflow "${{ inputs.workflow }}")
        fi

        if [ -n "${{ inputs.workflow-name }}" ]; then
          ARGS+=(--workflow_name "${{ inputs.workflow-name }}")
        fi

        if [ -n "${{ inputs.MATTERMOST_HIGHLIGHT }}" ] || [ -n "${{ inputs.highlight }}" ]; then
          ARGS+=(--highlight)
          # Add every highlight element as its own string
          IFS=' ' read -ra HIGHLIGHTS <<< "${{ inputs.MATTERMOST_HIGHLIGHT }} ${{ inputs.highlight }}"
          for HIGHLIGHT in "${HIGHLIGHTS[@]}"; do
            ARGS+=("$HIGHLIGHT")
          done
        fi

    - name: Free input
      if: ${{ inputs.free == 'true' }} 
      shell: bash
      run: echo "ARGS=--free \"${{ inputs.free }}"" >> $GITHUB_ENV
      
    - name: Execute Mattermost-Notify
      shell: bash
      run: mnotify-git ${{ env.POS_ARGS }} ${{ env.ARGS }}
