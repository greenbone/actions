name: Helm build and push chart
description: Push helm chart to OCI-based registries
inputs:
  charts-path:
    description: Path to charts base folder
    default: ./charts
  chart-name:
    description: "Chart to build and push"
    required: true
  registry:
    description: Registry
    default: "ghcr.io"
  registry-subpath:
    description: Registry subpath to place the helm chart in
    required: true
  registry-user:
    description: Registry login user
    required: true
  registry-token:
    description: Registry login password/token
    required: true

outputs:
  tag:
    description: Helm chart url's with tag.
  digest:
    description: The helm chart digest.

branding:
  icon: "package"
  color: "green"

runs:
  using: "composite"
  steps:
    - name: Helm registry login 
      shell: bash
      run: |
        helm registry login \
          -u '${{ inputs.registry-user }}' \
          -p '${{ inputs.registry-token }}' \
          '${{ inputs.registry }}'
    - name: Helm build and upload package
      shell: bash
      run: |
        helm dependency update '${{ inputs.charts-path }}/${{ inputs.chart-name }}'
        helm package '${{ inputs.charts-path }}/${{ inputs.chart-name }}'
    - name: Push
      id: push
      shell: bash
      if: ${{ inputs.registry-subpath }}
      run: |
        cmd="helm push ${{ inputs.chart-name }}-*.tgz oci://${{ inputs.registry }}/${{ github.repository_owner }}/"
        if [ "${{ inputs.registry-subpath }}" ]; then
          echo "Add subpath ${{ inputs.registry-subpath }}"
          cmd+="${{ inputs.registry-subpath }}/"
        fi
        output="$(helm $cmd)"
        echo "$output"
        # Get helm path and helm digest
        pushed=$(echo "$output" | grep -oP 'Pushed: \K.+')
        digest=$(echo "$output" | grep -oP 'Digest: \K.+')
        # Set outputs
        # I renamed the pushed variable to tags based on the docker build acton
        echo "tag=$pushed" >> "$GITHUB_OUTPUT"
        echo "digest=$digest" >> "$GITHUB_OUTPUT"
    - name: Cleanup
      shell: bash
      run: rm -f "${{ inputs.chart-name }}-*.tgz"
