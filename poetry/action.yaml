name: "Python Poetry Action"
author: "Bj√∂rn Ricks <bjoern.ricks@greenbone.net>"
description: "An action to install python and project dependencies via poetry"

inputs:
  working-directory:
    description: "A working directory where to run poetry install"
  install-dependencies:
    description: "Install project dependencies. Default is 'true'. Set to an other string then 'true' to not install the dependencies."
    default: "true"
  no-root:
    description: "Do not install the project itself, only the dependencies"
  without-dev:
    description: "Do not install the development dependencies"
  cache:
    description: "Cache dependencies by setting it to 'true'. Leave unset or set to an other string then 'true' to disable the cache."
    default: "false"
  cache-dependency-path:
    description: "Used to specify the path to dependency files. Supports wildcards or a list of file names for caching multiple dependencies."
  cache-poetry-installation:
    description: "Cache poetry and its dependencies by setting it to 'true'. Disabled by default."
  poetry-version:
    description: "Use a specific poetry version. By default the latest release is used."
  python-version:
    description: "Python version that should be installed and used."
    default: "3.10"

branding:
  icon: "package"
  color: "green"

runs:
  using: "composite"
  steps:
    - name: Set up poetry
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
      id: python
      with:
        python-version: ${{ inputs.python-version }}
        cache: ${{ inputs.cache == 'true' && 'poetry' || '' }}
        cache-dependency-path: ${{ inputs.cache-dependency-path }}
    - name: Set up poetry
      uses: greenbone/actions/pipx@a1883bd24d2d921426b3f06413e84606ecd43bdd # v3.27.11
      with:
        python-path: ${{ steps.python.outputs.python-path }}
        cache: ${{ inputs.cache-poetry-installation }}
        install: poetry
        install-version: ${{ inputs.poetry-version }}
    - name: Parse inputs
      if: ${{ inputs.install-dependencies == 'true' }}
      run: |
        ARGS=""
        if [[ -n "${{ inputs.no-root }}" ]]; then
          ARGS="--no-root"
        fi
        if [[ -n "${{ inputs.without-dev }}" ]]; then
          ARGS="$ARGS --without dev"
        fi
        echo "ARGS=${ARGS}" >> $GITHUB_ENV
      shell: bash
    - name: Install dependencies
      if: ${{ inputs.install-dependencies == 'true' }}
      run: poetry install ${{ env.ARGS }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}
