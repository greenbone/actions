name: "Python Mypy Action"
author: "Bj√∂rn Ricks <bjoern.ricks@greenbone.net>"
description: "An action that verifies python type hints by using mypy"

inputs:
  packages:
    description: "Python packages to check with mypy"
    deprecationMessage: "packages input is deprecated. Please use `mypy-arguments` input instead."
  mypy-arguments:
    description: "Additional arguments for running mypy"
    default: ""
  python-version:
    description: "Python version that should be installed"
    default: "3.10"
  poetry-version:
    description: "Use a specific poetry version. By default the latest release is used."
  install-dependencies:
    description: "Install project dependencies. Default is 'true'. Set to an other string then 'true' to not install the dependencies."
    default: "true"
  working-directory:
    description: "Working directory where to run the action"
    default: ${{ github.workspace }}
  cache:
    description: "Cache dependencies by setting it to 'true'. Leave unset or set to an other string then 'true' to disable the cache."
  cache-dependency-path:
    description: "Used to specify the path to dependency files. Supports wildcards or a list of file names for caching multiple dependencies."
  cache-poetry-installation:
    description: "Cache poetry and its dependencies. Default is 'true'. Set to an other string then 'true' to disable the cache."
    default: "true"

branding:
  icon: "package"
  color: "green"

runs:
  using: "composite"
  steps:
    - name: Install poetry
      uses: greenbone/actions/poetry@a1883bd24d2d921426b3f06413e84606ecd43bdd # v3.27.11
      with:
        python-version: ${{ inputs.python-version }}
        poetry-version: ${{ inputs.poetry-version }}
        cache: ${{ inputs.cache }}
        cache-dependency-path: ${{ inputs.cache-dependency-path }}
        cache-poetry-installation: ${{ inputs.cache-poetry-installation }}
        install-dependencies: ${{ inputs.install-dependencies }}
        working-directory: ${{ inputs.working-directory }}
    - run: poetry run mypy ${{ inputs.mypy-arguments }} ${{ inputs.packages }}
      shell: bash
      name: Check with mypy
      working-directory: ${{ inputs.working-directory }}
