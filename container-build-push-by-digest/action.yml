name: "Build a Container Image and Push to Registry by Digest"

description: |
  "An action to build a container image and optionally push it to a container "
  "registry by digest only."

branding:
  icon: "package"
  color: "green"

inputs:
  images:
    description: |
      "List of container image names to create and push, separated by newlines. "
      "The image names have to include the registry and repository only, but "
      "not the tag. Example: ghcr.io/greenbone/gvmd."
    required: true
    default: ""
  annotations:
    description: "List of custom annotations separated by newlines."
    default: ""
    required: false
  labels:
    description: "List of custom labels separated by newlines."
    default: ""
    required: false
  context:
    description: "The build context for the Docker build. Default is the current working directory."
    required: false
    default: "."
  dockerfile:
    description: "The path to the Dockerfile to use for the build. Default is {context}/Dockerfile."
    required: false
    default: ""
  provenance:
    description: "Whether to enable or disable provenance generation. Default is 'false'."
    required: false
    default: "false"
  oci-mediatypes:
    description: "Whether to use OCI instead of docker media types. Default is 'true'."
    required: false
    default: "true"
  push:
    description: "Whether to push the built image to the registry. Default is 'true'."
    required: false
    default: "true"
  build-args:
    description: "A newline separated list of build arguments to pass to the Docker build. Example: 'ARG1=value1\nARG2=value2'."
    required: false
    default: ""
  platforms:
    description: "A comma-separated list of target platforms for the build. Default is 'linux/amd64'."
    required: false
    default: "linux/amd64"
  setup-qemu:
    description: "Whether to set up QEMU for cross-platform builds. Default is 'false'."
    required: false
    default: "false"

outputs:
  digest:
    description: "The digest of the pushed container image."
    value: ${{ steps.build.outputs.digest }}

runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      if: ${{ inputs.setup-qemu == 'true' }}
      uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
      with:
        images: ${{ inputs.images }}
        labels: ${{ inputs.labels }}
        annotations: ${{ inputs.annotations }}

    - name: Build and push by digest
      id: build
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      with:
        annotations: ${{ steps.meta.outputs.annotations }}
        build-args: ${{ inputs.build-args }}
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: ${{ inputs.platforms }}
        provenance: ${{ inputs.provenance }}
        tags: ${{ inputs.images }}
        outputs: type=image,oci-mediatypes=${{ inputs.oci-mediatypes }},name-canonical=true,push-by-digest=true,push=${{ inputs.push }}
