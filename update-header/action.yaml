name: "Add or Update License Headers"
author: "Jaspar Stach <jaspar.stach@greenbone.net>"
description: "An action that adds or updates license header in all files of given directories."

inputs:
  github-user:
    description: "Github user name. Default is 'github-actions'."
    default: github-actions
  github-user-mail:
    description: "Mail address for the given github user. Default is 'github-actions@github.com'."
    default: github-actions@github.com
  github-user-token:
    description: "Token with write rights required to create the release. Default is github.token."
    default: ${{ github.token }}
  python-version:
    description: "Python version that should be installed"
    default: "3.10"
    required: false
  target:
    description: "Branch that should be updated."
    required: false
  directories:
    description: "Specify the directories that should be updated, separated by space e.g. 'foo bar baz'"
    required: true
  license-type:
    description: "Specify the license type'"
    default: "GPL-3.0-or-later"
    required: false

branding:
  icon: "package"
  color: "green"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        ref: ${{ inputs.target }}
    - name: Set up pontos
      uses: greenbone/actions/setup-pontos@62ad2c65d4d5e59b7e6608a4267a41c03ccb3cfd # v3.27.22
      with:
        python-version: ${{ inputs.python-version }}
    - name: Set git name, mail and origin
      uses: greenbone/actions/set-github-user@62ad2c65d4d5e59b7e6608a4267a41c03ccb3cfd # v3.27.22
      with:
        user: ${{ inputs.github-user }}
        mail: ${{ inputs.github-user-mail }}
        token: ${{ inputs.github-user-token }}
        repository: ${{ github.repository }}
    - name: Checkout new branch
      id: update
      run: |
        BRANCH_NAME="devops/update-header-$(date +'%Y%m%d_%s')"
        echo "HEAD=$BRANCH_NAME" >> $GITHUB_OUTPUT
        git checkout -b $BRANCH_NAME
      shell: bash
    - name: Run commands to update headers
      run: |
        pontos-update-header -d ${{ inputs.directories }} -l ${{ inputs.license-type }}
      shell: bash
    - name: Commit changes and open a pull request
      run: |
        if ! git diff-index --quiet HEAD --; then
          git add -u
          git commit -m "update license headers"
          git push --set-upstream origin ${{ steps.update.outputs.HEAD }}
          pontos-github pr create ${{ github.repository }} ${{ steps.update.outputs.HEAD }} ${{ inputs.target }} \
            'Update license headers' \
            --body "## What\n\n Add missing and update out-dated license headers\n\n \
        ## Why\n\n Files should contain up-to-date license headers\n\n \
        ## How\n\n Automated process with pontos and GitHub Actions"
        else
          echo "Nothing to commit"
        fi
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-user-token }}
